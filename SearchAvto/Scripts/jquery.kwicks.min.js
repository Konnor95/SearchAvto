function Gallery() { var e = this; container = jQuery(".flexslider"), clone = container.clone(false); this.init = function () { if (responsiveFlag == "block") { var e = container.find(".slides"); e.kwicks({ max: 754, spacing: 0 }).find("li > a").click(function () { return false }) } else { container.flexslider() } }; this.update = function () { var e = jQuery("#responsiveFlag").css("display"); if (responsiveFlag != e) { responsiveFlag = e; container.replaceWith(clone); container = clone; clone = container.clone(false); this.init() } }; this.init() } (function (e) { e.fn.kwicks = function (t) { var n = { isVertical: false, sticky: false, defaultKwick: 0, event: "mouseover", spacing: 0, duration: 500 }; var r = e.extend(n, t); var s = r.isVertical ? "height" : "width"; var o = r.isVertical ? "top" : "left"; return this.each(function () { container = e(this); var t = container.children("li"); var n = t.eq(0).css(s).replace(/px/, ""); if (!r.max) { r.max = n * t.size() - r.min * (t.size() - 1) } else { r.min = (n * t.size() - r.max) / (t.size() - 1) } if (r.isVertical) { container.css({ width: t.eq(0).css("width"), height: n * t.size() + r.spacing * (t.size() - 1) + "px" }) } else { container.css({ width: n * t.size() + r.spacing * (t.size() - 1) + "px", height: t.eq(0).css("height") }) } var u = []; for (i = 0; i < t.size() ; i++) { u[i] = []; for (j = 1; j < t.size() - 1; j++) { if (i == j) { u[i][j] = r.isVertical ? j * r.min + j * r.spacing : j * r.min + j * r.spacing } else { u[i][j] = (j <= i ? j * r.min : (j - 1) * r.min + r.max) + j * r.spacing } } } t.each(function (i) { var a = e(this); if (i === 0) { a.css(o, "0px") } else if (i == t.size() - 1) { a.css(r.isVertical ? "bottom" : "right", "0px") } else { if (r.sticky) { a.css(o, u[r.defaultKwick][i]) } else { a.css(o, i * n + i * r.spacing) } } if (r.sticky) { if (r.defaultKwick == i) { a.css(s, r.max + "px"); a.addClass("active") } else { a.css(s, r.min + "px") } } a.css({ margin: 0, position: "absolute" }); a.bind(r.event, function () { var e = []; var n = []; t.stop().removeClass("active"); for (j = 0; j < t.size() ; j++) { e[j] = t.eq(j).css(s).replace(/px/, ""); n[j] = t.eq(j).css(o).replace(/px/, "") } var f = {}; f[s] = r.max; var l = r.max - e[i]; var c = e[i] / l; a.addClass("active").animate(f, { step: function (a) { var f = l != 0 ? a / l - c : 1; t.each(function (a) { if (a != i) { t.eq(a).css(s, e[a] - (e[a] - r.min) * f + "px") } if (a > 0 && a < t.size() - 1) { t.eq(a).css(o, n[a] - (n[a] - u[i][a]) * f + "px") } }) }, duration: r.duration, easing: r.easing }) }) }); if (!r.sticky) { container.bind("mouseleave", function () { var e = []; var u = []; t.removeClass("active").stop(); for (i = 0; i < t.size() ; i++) { e[i] = t.eq(i).css(s).replace(/px/, ""); u[i] = t.eq(i).css(o).replace(/px/, "") } var a = {}; a[s] = n; var f = n - e[0]; t.eq(0).animate(a, { step: function (a) { var l = f != 0 ? (a - e[0]) / f : 1; for (i = 1; i < t.size() ; i++) { t.eq(i).css(s, e[i] - (e[i] - n) * l + "px"); if (i < t.size() - 1) { t.eq(i).css(o, u[i] - (u[i] - (i * n + i * r.spacing)) * l + "px") } } }, duration: r.duration, easing: r.easing }) }) } }) } })(jQuery); var Main = Main || {}; jQuery(window).load(function () { window.responsiveFlag = jQuery("#responsiveFlag").css("display"); Main.gallery = new Gallery; jQuery(window).resize(function () { Main.gallery.update() }) })